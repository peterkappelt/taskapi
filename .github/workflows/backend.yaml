name: Build backend containers
on:
  push:
    paths:
      - taskapi_backend/**
      - .github/workflows/backend.yaml
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  backend-container:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2
      - name: Setup Buildx
        uses: docker/setup-buildx-action@v2
      - name: GHCR login
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend
      - name: Build and push container
        uses: docker/build-push-action@v4
        with:
          context: taskapi_backend
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  validate-openapi-spec:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"
      - name: Install PIP dependencies
        working-directory: ./taskapi_backend
        run: pip install -r requirements.txt
      - name: Generate empty settings.py
        working-directory: ./taskapi_backend
        run: echo "from taskapi_backend.settings_base import *" > ./taskapi_backend/settings.py
      - name: Generate OpenAPI spec from code
        working-directory: ./taskapi_backend
        run: python manage.py generateschema > ${{ runner.temp }}/openapi.yaml
      - name: Store schema as artifact
        uses: actions/upload-artifact@v3
        with:
          path: ${{ runner.temp }}/openapi.yaml
      - name: Validate committed schema is up-to-date
        working-directory: ./taskapi_backend
        run: |
          cmp ./openapi.yaml ${{ runner.temp }}/openapi.yaml || (exit 1)
